{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/iterare/src/index.ts","node_modules/iterare/src/iterate.ts","node_modules/iterare/src/concat.ts","node_modules/iterare/src/filter.ts","node_modules/iterare/src/flatten.ts","node_modules/iterare/src/utils.ts","node_modules/iterare/src/map.ts","node_modules/iterare/src/slice.ts","node_modules/iterare/src/zip.ts","node_modules/@parcel/runtime-js/lib/runtime-fab2f267685809e0.js","node_modules/@parcel/runtime-js/lib/runtime-b9dd94aa91872c85.js","node_modules/preact/src/constants.js","node_modules/preact/src/util.js","node_modules/preact/src/options.js","node_modules/preact/src/create-element.js","node_modules/preact/src/component.js","node_modules/preact/src/diff/children.js","node_modules/preact/src/diff/props.js","node_modules/preact/src/diff/index.js","node_modules/preact/src/render.js","node_modules/preact/src/diff/catch-error.js","node_modules/preact/hooks/src/index.js","node_modules/classnames/index.js","node_modules/immer/src/utils/errors.ts","node_modules/immer/src/utils/common.ts","node_modules/immer/src/utils/plugins.ts","node_modules/immer/src/core/scope.ts","node_modules/immer/src/core/finalize.ts","node_modules/immer/src/core/proxy.ts","node_modules/immer/src/core/immerClass.ts","node_modules/immer/src/core/current.ts","node_modules/immer/src/plugins/mapset.ts","node_modules/immer/src/immer.ts","node_modules/immer/src/utils/env.ts","src/app.tsx","src/style.module.css","src/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;",null,null,null,null,null,null,null,null,null,"module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j021v\"))).then(() => parcelRequire('jHUzP'));","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2lyl3\\\":\\\"index.b3127c05.js\\\",\\\"j021v\\\":\\\"genpdf.feca159b.js\\\",\\\"cvQVd\\\":\\\"html2canvas.023808a9.js\\\",\\\"6GF5t\\\":\\\"purify.46f3d419.js\\\",\\\"ddqwU\\\":\\\"index.es.47b8b111.js\\\",\\\"aldH9\\\":\\\"index.d5b7ab70.css\\\"}\"));","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== oldProps.value ||\n\t\t\t\t\ti !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import { FunctionComponent as FC, h } from \"preact\";\nimport { JSXInternal } from \"preact/src/jsx\";\nimport { useState } from \"preact/hooks\";\nimport type { Alt } from \"./genpdf\";\nimport cx from \"classnames\";\nimport iterate from \"iterare\";\nimport produce, { enableMapSet } from \"immer\";\n// @ts-ignore\nimport * as styles from \"./style.module.css\";\nenableMapSet();\n\nlet _key = 0;\nconst key = (): Key => _key++;\ntype Key = number;\n\nconst prevDefault =\n    <E extends { preventDefault(): void }>(f: (ev: E) => void) =>\n    (ev: E) => {\n        ev.preventDefault();\n        f(ev);\n    };\n\ntype Layer = Map<Key, Alt>;\nconst makeAlt = (): Alt => ({ blob: new Blob(), full: false, pixel: false });\nconst newLayer = (): Layer => new Map([[key(), makeAlt()]]);\n\nlet _genPdf!: Promise<typeof import(\"./genpdf\").genPdf>;\ndocument.addEventListener(\"readystatechange\", () => {\n    if (document.readyState === \"complete\") {\n        _genPdf ||= import(\"./genpdf\").then((mod) => mod.genPdf);\n    }\n});\nconst genPdf: typeof import(\"./genpdf\").genPdf = async (...args) => (await _genPdf)(...args);\n\nconst create = async (layers: Map<Key, Layer>) => {\n    const win = window.open()!;\n    win.document.write(`<h1 style=\"text-align:center;\">Please wait...</h1>`);\n    try {\n        const pdf = await genPdf(\n            iterate(layers.values())\n                .map((layer) => Array.from(layer.values()))\n                .toArray()\n        );\n        win.location = pdf.output(\"bloburi\").toString();\n    } catch (err) {\n        win.close();\n        console.error(err);\n        // TODO: error message in the document\n        alert(\"Error while generating pdf: \" + err);\n    }\n};\n\nexport const App: FC = () => {\n    const [layers, setLayers] = useState<Map<Key, Layer>>(() => new Map([[key(), newLayer()]]));\n\n    return (\n        <form className={styles.form} onSubmit={prevDefault(() => create(layers))}>\n            <h2>Button sheet generator</h2>\n            <p>\n                The rows are layers, the different images in each row are \"alts\" - they'll be tiled\n                on the output sheet, so if you have 2 layers made of alts X, Y, Z and A, B the\n                output will be XA, YB, ZA, XB, etc.\n            </p>\n            {iterate(layers)\n                .map(([i, layer]) => (\n                    <LayersRow\n                        key={i}\n                        alts={layer}\n                        update={(alt, upd) => {\n                            setLayers((layers) =>\n                                produce(layers, (draft) => {\n                                    const layer = draft.get(i)!;\n                                    const newVersion = upd(layer.get(alt)!);\n                                    if (newVersion) layer.set(alt, newVersion);\n                                    else layer.delete(alt);\n                                })\n                            );\n                        }}\n                        addAlt={() => {\n                            setLayers((layers) =>\n                                produce(layers, (draft) => {\n                                    draft.get(i)!.set(key(), makeAlt());\n                                })\n                            );\n                        }}\n                        removeLayer={() => {\n                            setLayers((layers) =>\n                                produce(layers, (draft) => {\n                                    draft.delete(i);\n                                })\n                            );\n                        }}\n                    />\n                ))\n                .toArray()}\n            <p>\n                <button\n                    onClick={prevDefault((e) => {\n                        setLayers((prev) => produce(prev, (draft) => draft.set(key(), newLayer())));\n                    })}\n                >\n                    Add Layer\n                </button>\n            </p>\n            <p>\n                <input type=\"submit\" value=\"Create\" />\n            </p>\n        </form>\n    );\n};\n\nconst ButtonLayer: FC<{\n    update: (change: (alt: Alt) => Alt | null) => void;\n    alt: Alt;\n}> = ({ update, alt: { full, pixel } }) => {\n    const [backgroundImage, setBackgroundImage] = useState<string | undefined>(undefined);\n    return (\n        <div className={styles.buttonLayer}>\n            <label className={styles.dContents}>\n                <input\n                    type=\"file\"\n                    className={styles.hidden}\n                    onChange={(e) => {\n                        const file = e.currentTarget.files![0];\n                        setBackgroundImage(`url(${URL.createObjectURL(file)})`);\n                        update((alt) => ({ ...alt, blob: file }));\n                    }}\n                />\n                <button\n                    // forward button to file input\n                    onClick={prevDefault((e) => e.currentTarget.parentElement!.click())}\n                    className={cx(\n                        styles.layerImg,\n                        backgroundImage ? null : styles.uploadIcon,\n                        full && styles.layerImgFull\n                    )}\n                    style={{ backgroundImage }}\n                />\n            </label>\n            <div className={cx(styles.layerConfig, styles.h100)}>\n                <button\n                    className={cx(styles.h100, styles.textButton)}\n                    onClick={prevDefault((e) => update(() => null))}\n                >\n                    🗙\n                </button>\n                <input\n                    className={cx(styles.h100, styles.textButton, styles.checkbox)}\n                    type=\"checkbox\"\n                    checked={full}\n                    onChange={(e) => update((alt) => ({ ...alt, full: e.currentTarget.checked }))}\n                    style={{ appearance: \"none\" }}\n                    // @ts-ignore\n                    checkedMark=\"◎\"\n                    uncheckedMark=\"○\"\n                />\n                <input\n                    className={cx(styles.h100, styles.textButton, styles.checkboxPixelart)}\n                    type=\"checkbox\"\n                    checked={pixel}\n                    onChange={(e) => update((alt) => ({ ...alt, pixel: e.currentTarget.checked }))}\n                    style={{ appearance: \"none\" }}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst LayersRow: FC<{\n    alts: Map<Key, Alt>;\n    update: (k: Key, alt: (alt: Alt) => Alt | null) => void;\n    addAlt: () => void;\n    removeLayer: () => void;\n}> = ({ alts, update, addAlt, removeLayer }) => (\n    <div className={styles.layersRow}>\n        <button\n            className={cx(styles.textButton, styles.removeLayer)}\n            onClick={prevDefault(removeLayer)}\n        >\n            🗙\n        </button>\n        {iterate(alts)\n            .map(([i, alt]) => <ButtonLayer key={i} update={(alt) => update(i, alt)} alt={alt} />)\n            .toArray()}\n        <button\n            tabIndex={0}\n            className={cx(styles.addAlt, styles.textButton)}\n            onClick={prevDefault(addAlt)}\n            style={{ fontSize: \"1.5em\" }}\n        >\n            ＋\n        </button>\n    </div>\n);\n",".form {\n    font-family: sans-serif;\n    margin: 0 auto;\n    border-radius: 10px;\n    border: 1px black solid;\n    padding: 25px;\n}\n\n@media (max-width: 500px) {\n    .form {\n        width: 80vw;\n    }\n}\n@media (min-width: 500px) and (max-width: 1200px) {\n    .form {\n        width: 75vw;\n    }\n}\n@media (min-width: 1200px) {\n    .form {\n        width: 60vw;\n    }\n}\n\n.layers-row {\n    display: flex;\n    border-radius: 5px;\n    border: 1px black solid;\n    padding: 15px;\n    gap: 10px;\n    overflow-x: scroll;\n    margin: 20px 0;\n}\n\n.remove-layer {\n    position: absolute;\n    transform: translateY(-28px) translateX(-28px);\n    background-color: white;\n    border-radius: 50%;\n    width: 1.5em;\n    height: 1.5em;\n    font-size: 1em;\n    border: 1px black solid;\n}\n\n.button-layer,\n.add-alt {\n    border-radius: 10px;\n    border: 1px black solid;\n}\n\n.add-alt {\n    --size: calc(1.25in + 20px + 0.1px);\n    min-height: var(--size);\n    min-width: var(--size);\n}\n\n.button-layer {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 5px;\n    padding: 10px;\n}\n.layer-img {\n    --layer-size: 1.25in;\n    width: var(--layer-size);\n    height: var(--layer-size);\n    border-radius: 50%;\n    background-size: 100% 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n    border: 0.1px solid gray;\n    background-image: url(/assets/upload.svg);\n}\n.layer-img.upload-icon {\n    background-size: 50% 50%;\n}\n.layer-img.layer-img-full {\n    --layer-size: 1.625in;\n}\n.layer-config {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    height: 100%;\n    width: 20px;\n}\n.layer-config > .text-button {\n    background-color: lightgray;\n    width: 22px;\n    flex: auto;\n    margin: 0;\n    border: 0.5px solid black;\n    font-size: 1em;\n}\n.checkbox::after {\n    line-height: 2;\n    content: attr(uncheckedMark);\n}\n.checkbox:checked::after {\n    content: attr(checkedMark);\n}\n.checkbox-pixelart::after {\n    content: \"\";\n    width: 1em;\n    height: 1em;\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    background-image: url(\"data-url:/assets/palette.svg\");\n}\n.checkbox-pixelart:checked::after {\n    background-image: url(\"data-url:/assets/invader.svg\");\n}\n\n.hidden {\n    display: none;\n}\n.d-contents {\n    display: contents;\n}\n.h100 {\n    height: 100%;\n}\n.w100 {\n    width: 100%;\n}\n.text-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n}\n","import { render, h } from \"preact\";\nimport { App } from \"./app\";\n\nrender(<App />, document.getElementById(\"app\")!);\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","iterate","$aOgjX","zip","default","Symbol","iterator","$7deb3be377b6249f$var$IteratorWithOperators","next","this","source","tmp","map","iteratee","$bXlVX","MapIterator","filter","predicate","$1xt6a","FilterIterator","concat","collection","$6vjrP","ConcatIterator","$gDxL1","toIterator","take","limit","$e9GuG","SliceIterator","drop","n","Infinity","slice","start","end","flatten","$Sq1HQ","FlattenIterator","reduce","accumulator","result","undefined","done","TypeError","value","find","includes","some","every","forEach","join","separator","joined","substr","toArray","Array","from","toSet","set","Set","add","toMap","Map","constructor","$7deb3be377b6249f$var$iterate","IteratorWithOperators","a","b","$d3HCh","ZipIterator","toConcat","shift","inner","outer","isIterable","$c1ca7963bdd9ab65$var$isIterator","candidate","$c1ca7963bdd9ab65$var$isIterable","isIterator","import","parcelRequire","resolve","then","register","JSON","parse","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","call","defaultProps","createVNode","original","vnode","__","__b","__e","__d","__h","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","isArray","reorderChildren","placeChild","unmount","applyRef","nextDom","sibDom","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","firstChild","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","bind","setTimeout","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","index","hooks","useState","initialState","reducer","invokeOrReturn","hookState","_reducer","init","action","nextValue","flushAfterPaintEffects","invokeCleanup","invokeEffect","requestAnimationFrame","raf","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","hasErrored","hook","comp","cleanup","arg","f","hasOwn","hasOwnProperty","classNames","classes","argType","apply","toString","$44a44312232fffaa$exports","define","amd","window","die","args","msg","isDraft","DRAFT_STATE","isDraftable","proto","getPrototypeOf","Ctor","Function","objectCtorString","DRAFTABLE","isMap","isSet","each","iter","enumerableOnly","getArchtype","ownKeys","entry","thing","type_","has","prop","get","propOrOldValue","t","delete","x","y","target","hasMap","hasSet","latest","copy_","base_","shallowCopy","descriptors","getOwnPropertyDescriptors","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","autoFreeze_","peek","getDescriptorFromProto","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","copyHelper","archType","enableMapSet","__extends","d","extendStatics","prepareMapCopy","prepareSetCopy","assertUnrevoked","stringify","setPrototypeOf","__proto__","p","DraftMap","defineProperty","size","thisArg","_value","_this","values","n13","$055f84fd51ad9ef1$export$541ac630993a4c84","iteratorSymbol","_this2","entries","n14","_this3","DraftSet","hasSymbol","hasProxies","Reflect","for","$055f84fd51ad9ef1$var$G","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","currentState","deleteProperty","owner","fn","Immer","$055f84fd51ad9ef1$export$22e8af3f75a010e3","config","produce","recipe","defaultBase","self","hasError","ip","arg1","arg2","produceWithPatches","patches","inversePatches","nextState","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","currentImpl","copy","hasChanges_","finishDraft","applyPatches","patch","op","applyPatchesImpl","applyPatches_","$055f84fd51ad9ef1$export$7d9f65390203b435","$8e5e18fbbe33c793$var$_key","$8e5e18fbbe33c793$var$key","$8e5e18fbbe33c793$var$prevDefault","ev","preventDefault","$8e5e18fbbe33c793$var$makeAlt","blob","Blob","full","pixel","$8e5e18fbbe33c793$var$newLayer","$8e5e18fbbe33c793$var$_genPdf","readyState","mod","genPdf","$8e5e18fbbe33c793$var$create","async","layers","win","open","write","pdf","$8e5e18fbbe33c793$var$genPdf","$parcel$interopDefault","$kwljN","layer","location","output","err","close","console","alert","$8e5e18fbbe33c793$export$86fbec116b87613f","layers1","setLayers","$24fa25825a717dc7$export$60241385465d0a34","$58eedc976c0db041$export$c8a8987d4410bf2d","className","onSubmit","layer1","$8e5e18fbbe33c793$var$LayersRow","alts","alt","upd","$055f84fd51ad9ef1$export$2e2bcd8739ae039","newVersion","addAlt","removeLayer","onClick","prev","$8e5e18fbbe33c793$var$ButtonLayer","backgroundImage","setBackgroundImage","onChange","file","currentTarget","files","URL","createObjectURL","parentElement","click","appearance","checkedMark","uncheckedMark","alt1","tabIndex","fontSize","$58eedc976c0db041$export$b3890eb0ae9dca99","getElementById"],"version":3,"file":"index.b3127c05.js.map"}